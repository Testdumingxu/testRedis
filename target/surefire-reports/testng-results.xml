<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="1" total="125" passed="124">
  <reporter-output>
    <line>
      <![CDATA[统计的key值：testdecr;value值：7]]>
    </line>
    <line>
      <![CDATA[实际结果: 7]]>
    </line>
    <line>
      <![CDATA[统计的key值：test_decr;value值：12]]>
    </line>
    <line>
      <![CDATA[实际结果: 12]]>
    </line>
    <line>
      <![CDATA[统计的key值：testdecr;value值：7]]>
    </line>
    <line>
      <![CDATA[实际结果: 7]]>
    </line>
    <line>
      <![CDATA[统计的key值：test_decr;value值：12]]>
    </line>
    <line>
      <![CDATA[实际结果: 12]]>
    </line>
    <line>
      <![CDATA[统计的key值：testdecr;value值：30]]>
    </line>
    <line>
      <![CDATA[实际结果: 30]]>
    </line>
    <line>
      <![CDATA[统计的key值：test_decr;value值：-70]]>
    </line>
    <line>
      <![CDATA[实际结果: -70]]>
    </line>
    <line>
      <![CDATA[统计的key值：testdecr;value值：28]]>
    </line>
    <line>
      <![CDATA[实际结果: 28]]>
    </line>
    <line>
      <![CDATA[统计的key值：test_decr;value值：-72]]>
    </line>
    <line>
      <![CDATA[实际结果: -72]]>
    </line>
    <line>
      <![CDATA[实际结果: 29]]>
    </line>
    <line>
      <![CDATA[实际结果: -71]]>
    </line>
    <line>
      <![CDATA[实际结果: 22]]>
    </line>
    <line>
      <![CDATA[实际结果: 44]]>
    </line>
    <line>
      <![CDATA[实际结果: 21.1]]>
    </line>
    <line>
      <![CDATA[实际结果: OK]]>
    </line>
    <line>
      <![CDATA[插入的key值：stringkey;value值：stringvalue]]>
    </line>
    <line>
      <![CDATA[预期结果: OK | 实际结果: OK]]>
    </line>
    <line>
      <![CDATA[实际结果: true]]>
    </line>
    <line>
      <![CDATA[实际结果: OK]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: 11]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[插入的key值：stringkey;value值：22]]>
    </line>
    <line>
      <![CDATA[实际结果: 22]]>
    </line>
    <line>
      <![CDATA[实际结果: updatevalue]]>
    </line>
    <line>
      <![CDATA[实际结果: 11]]>
    </line>
    <line>
      <![CDATA[实际结果: stringvaluestringvalue]]>
    </line>
    <line>
      <![CDATA[预期结果: true | 实际结果: true]]>
    </line>
    <line>
      <![CDATA[预期结果: false | 实际结果: false]]>
    </line>
    <line>
      <![CDATA[实际结果: str]]>
    </line>
    <line>
      <![CDATA[实际结果: [9p:blpopkey, hello]]]>
    </line>
    <line>
      <![CDATA[实际结果: [9p:brpopkey, world]]]>
    </line>
    <line>
      <![CDATA[预期结果: listValue|实际结果: listValue]]>
    </line>
    <line>
      <![CDATA[预期结果: listValue3|实际结果: listValue3]]>
    </line>
    <line>
      <![CDATA[预期结果: null|实际结果: null]]>
    </line>
    <line>
      <![CDATA[预期结果: 3|实际结果: 3]]>
    </line>
    <line>
      <![CDATA[预期结果: 4|实际结果: 4]]>
    </line>
    <line>
      <![CDATA[预期结果: -1|实际结果: -1]]>
    </line>
    <line>
      <![CDATA[预期结果: 0|实际结果: 0]]>
    </line>
    <line>
      <![CDATA[预期结果: Strat|实际结果: Strat]]>
    </line>
    <line>
      <![CDATA[预期结果: null|实际结果: null]]>
    </line>
    <line>
      <![CDATA[实际结果: 1]]>
    </line>
    <line>
      <![CDATA[实际结果: 2]]>
    </line>
    <line>
      <![CDATA[实际结果: 4]]>
    </line>
    <line>
      <![CDATA[预期结果: 2|实际结果: 2]]>
    </line>
    <line>
      <![CDATA[预期结果: 0|实际结果: 0]]>
    </line>
    <line>
      <![CDATA[预期结果: 2|实际结果: 2]]>
    </line>
    <line>
      <![CDATA[预期结果: 1|实际结果: 1]]>
    </line>
    <line>
      <![CDATA[预期结果: 2|实际结果: 2]]>
    </line>
    <line>
      <![CDATA[预期结果: OK|实际结果: OK]]>
    </line>
    <line>
      <![CDATA[预期结果: OK|实际结果: OK]]>
    </line>
    <line>
      <![CDATA[预期结果: bar|实际结果: bar]]>
    </line>
    <line>
      <![CDATA[预期结果: null|实际结果: null]]>
    </line>
    <line>
      <![CDATA[|实际结果: 86]]>
    </line>
    <line>
      <![CDATA[|实际结果: 87]]>
    </line>
    <line>
      <![CDATA[|实际结果: 89]]>
    </line>
    <line>
      <![CDATA[|实际结果: 90]]>
    </line>
    <line>
      <![CDATA[|实际结果: 0]]>
    </line>
    <line>
      <![CDATA[预期结果: 4|实际结果: 4]]>
    </line>
    <line>
      <![CDATA[预期结果: 0|实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: [go, java, python]]]>
    </line>
    <line>
      <![CDATA[实际结果: 4]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: 4]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[预期结果: true;实际结果: true]]>
    </line>
    <line>
      <![CDATA[预期结果: false;实际结果: false]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: setvalue2]]>
    </line>
    <line>
      <![CDATA[实际结果: redis.clients.jedis.ScanResult@44a59da3]]>
    </line>
    <line>
      <![CDATA[实际结果: setvalue3]]>
    </line>
    <line>
      <![CDATA[实际结果: [setvalue, setvalue4]]]>
    </line>
    <line>
      <![CDATA[预期结果: 3|实际结果: 3]]>
    </line>
    <line>
      <![CDATA[预期结果: 1|实际结果: 1]]>
    </line>
    <line>
      <![CDATA[预期结果: 3|实际结果: 3]]>
    </line>
    <line>
      <![CDATA[预期结果: 0|实际结果: 0]]>
    </line>
    <line>
      <![CDATA[预期结果: 2|实际结果: 2]]>
    </line>
    <line>
      <![CDATA[预期结果: 2|实际结果: 2]]>
    </line>
    <line>
      <![CDATA[预期结果: 3|实际结果: 3]]>
    </line>
    <line>
      <![CDATA[预期结果: 4000.0|实际结果: 4000.0]]>
    </line>
    <line>
      <![CDATA[|实际结果: [xiaoming, xiaohong]]]>
    </line>
    <line>
      <![CDATA[预期结果: 1|实际结果: 1]]>
    </line>
    <line>
      <![CDATA[预期结果: 2|实际结果: 2]]>
    </line>
    <line>
      <![CDATA[|实际结果: 2]]>
    </line>
    <line>
      <![CDATA[|实际结果: 2]]>
    </line>
    <line>
      <![CDATA[|实际结果: [tom, peter, jack]]]>
    </line>
    <line>
      <![CDATA[|实际结果: []]]>
    </line>
    <line>
      <![CDATA[|实际结果: 0]]>
    </line>
    <line>
      <![CDATA[|实际结果: redis.clients.jedis.ScanResult@7e19ebf0]]>
    </line>
    <line>
      <![CDATA[|实际结果: 5000.0]]>
    </line>
    <line>
      <![CDATA[|实际结果: [one, two, three]]]>
    </line>
    <line>
      <![CDATA[|实际结果: 1]]>
    </line>
    <line>
      <![CDATA[key：hexistskey|字段：hexistsname存在|实际结果: true]]>
    </line>
    <line>
      <![CDATA[hash_key_not_existorhashname2不存在||实际结果: false]]>
    </line>
    <line>
      <![CDATA[hexistskeyorhash_not_exist不存在||实际结果: false]]>
    </line>
    <line>
      <![CDATA[实际结果: {hexistsname=hexistsValue}]]>
    </line>
    <line>
      <![CDATA[实际结果: {}]]>
    </line>
    <line>
      <![CDATA[预期结果: 200 |实际结果: 200]]>
    </line>
    <line>
      <![CDATA[预期结果: 150 |实际结果: 150]]>
    </line>
    <line>
      <![CDATA[预期结果: 200.0 |实际结果: 200.0]]>
    </line>
    <line>
      <![CDATA[预期结果: 10.5 |实际结果: 10.5]]>
    </line>
    <line>
      <![CDATA[实际结果: []]]>
    </line>
    <line>
      <![CDATA[实际结果: []]]>
    </line>
    <line>
      <![CDATA[实际结果: [www.google.com]]]>
    </line>
    <line>
      <![CDATA[实际结果: [www.yahoo.com, www.google.com]]]>
    </line>
    <line>
      <![CDATA[实际结果: [null]]]>
    </line>
    <line>
      <![CDATA[预期结果: OK|实际结果: OK]]>
    </line>
    <line>
      <![CDATA[预期结果: OK|实际结果: OK]]>
    </line>
    <line>
      <![CDATA[实际结果: 1]]>
    </line>
    <line>
      <![CDATA[实际结果: 1]]>
    </line>
    <line>
      <![CDATA[实际结果: 1]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: [www.yahoo.com, doc.redisfans.com, www.baidu.com]]]>
    </line>
    <line>
      <![CDATA[实际结果: []]]>
    </line>
    <line>
      <![CDATA[预期结果: hashValue3|实际结果: hashValue3]]>
    </line>
    <line>
      <![CDATA[预期结果: null|实际结果: null]]>
    </line>
    <line>
      <![CDATA[预期结果: null|实际结果: null]]>
    </line>
    <line>
      <![CDATA[预期结果: 3|实际结果: 3]]>
    </line>
    <line>
      <![CDATA[预期结果: 0|实际结果: 0]]>
    </line>
    <line>
      <![CDATA[实际结果: redis.clients.jedis.ScanResult@59cba5a]]>
    </line>
    <line>
      <![CDATA[删除一个字段成功: 1]]>
    </line>
    <line>
      <![CDATA[删除两个字段成功: 2]]>
    </line>
    <line>
      <![CDATA[删除不存在的字段：0]]>
    </line>
  </reporter-output>
  <suite name="redis的接口测试套件" duration-ms="3881" started-at="2020-08-31T07:29:22Z" finished-at="2020-08-31T07:29:26Z">
    <groups>
      <group name="sortedset">
        <method signature="RedisTestSortedSetCases.Test_ZAdd(java.lang.String, java.util.Map, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZAdd" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZAdd2(java.lang.String, double, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZAdd2" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZCard(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZCard" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZCount(java.lang.String, double, double, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZCount" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZCount2(java.lang.String, java.lang.String, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZCount2" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZIncrBy(java.lang.String, double, java.lang.String, java.lang.Double)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZIncrBy" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRange(java.lang.String, long, long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRange" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRangeByScore(java.lang.String, double, double)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRangeByScore" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRank(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRank" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRem(java.lang.String, java.lang.Long, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRem" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRemByRank(java.lang.String, long, long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRemByRank" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRemRangeByScore(java.lang.String, double, double)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRemRangeByScore" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRevRange(java.lang.String, long, long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRevRange" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRevRangeByScore(java.lang.String, double, double)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRevRangeByScore" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZRevRank(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRevRank" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZScan(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZScan" class="com.tester.testcase.RedisTestSortedSetCases"/>
        <method signature="RedisTestSortedSetCases.Test_ZScore(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZScore" class="com.tester.testcase.RedisTestSortedSetCases"/>
      </group> <!-- sortedset -->
      <group name="set">
        <method signature="RedisTestSetCases.Test_Sadd(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Sadd" class="com.tester.testcase.RedisTestSetCases"/>
        <method signature="RedisTestSetCases.Test_Scard(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Scard" class="com.tester.testcase.RedisTestSetCases"/>
        <method signature="RedisTestSetCases.Test_SisMember(java.lang.String, java.lang.String, java.lang.Boolean)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_SisMember" class="com.tester.testcase.RedisTestSetCases"/>
        <method signature="RedisTestSetCases.Test_SrandMember(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_SrandMember" class="com.tester.testcase.RedisTestSetCases"/>
        <method signature="RedisTestSetCases.Test_Spop(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Spop" class="com.tester.testcase.RedisTestSetCases"/>
        <method signature="RedisTestSetCases.Test_Spop2(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Spop2" class="com.tester.testcase.RedisTestSetCases"/>
        <method signature="RedisTestSetCases.Test_Srem(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Srem" class="com.tester.testcase.RedisTestSetCases"/>
        <method signature="RedisTestSetCases.Test_Sscan(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Sscan" class="com.tester.testcase.RedisTestSetCases"/>
      </group> <!-- set -->
      <group name="string">
        <method signature="RedisTestStringCases.Test_BitCount(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_BitCount" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_BitCount2(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_BitCount2" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Decr(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Decr" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_DecrBy(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_DecrBy" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Incr(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Incr" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_IncrBy(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_IncrBy" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_IncrByFloat(java.lang.String, double)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_IncrByFloat" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Psetex(java.lang.String, java.lang.Long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Psetex" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Set(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Set" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Get(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Get" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_GetBit(java.lang.String, java.lang.Boolean)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_GetBit" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_GetRange(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_GetRange" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Setbit(java.lang.String, java.lang.Long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Setbit" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Setex(java.lang.String, java.lang.Integer, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Setex" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Setnx(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Setnx" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_StrLen(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_StrLen" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_Append(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Append" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_GetSet(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_GetSet" class="com.tester.testcase.RedisTestStringCases"/>
        <method signature="RedisTestStringCases.Test_SetRange(java.lang.String, java.lang.Long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_SetRange" class="com.tester.testcase.RedisTestStringCases"/>
      </group> <!-- string -->
      <group name="list">
        <method signature="RedisTestListCases.Test_BlPop(java.lang.Integer, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_BlPop" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_BrPop(int, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_BrPop" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LIndex(java.lang.String, long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LIndex" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LInsert(java.lang.String, redis.clients.jedis.ListPosition, java.lang.String, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LInsert" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LPop(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPop" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LPush(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPush" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LLen(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LLen" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LPushx(java.lang.String, java.lang.Long, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPushx" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LRange(java.lang.String, long, long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LRange" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LRem(java.lang.String, java.lang.Long, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LRem" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LSet(java.lang.String, java.lang.Long, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LSet" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_LTrim(java.lang.String, long, long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LTrim" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_RPop(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPop" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_RPush(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPush" class="com.tester.testcase.RedisTestListCases"/>
        <method signature="RedisTestListCases.Test_RPushx(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPushx" class="com.tester.testcase.RedisTestListCases"/>
      </group> <!-- list -->
      <group name="hash">
        <method signature="RedisTestHashCases.Test_Hexists(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hexists" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_HgetAll(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HgetAll" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_HincrBy(java.lang.String, java.lang.String, java.lang.Long, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HincrBy" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_HincrByFloat(java.lang.String, java.lang.String, java.lang.Double, java.lang.Double)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HincrByFloat" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hkeys(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hkeys" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hmget(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hmget" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hmset(java.lang.String, java.util.Map, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hmset" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hset(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hset" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hget(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hget" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hdel(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hdel" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hlen(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hlen" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hscan(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hscan" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hset2(java.lang.String, java.lang.String, [B)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hset2" class="com.tester.testcase.RedisTestHashCases"/>
        <method signature="RedisTestHashCases.Test_Hvals(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hvals" class="com.tester.testcase.RedisTestHashCases"/>
      </group> <!-- hash -->
    </groups>
    <test name="redis的全部测试模块" duration-ms="3881" started-at="2020-08-31T07:29:22Z" finished-at="2020-08-31T07:29:26Z">
      <class name="com.tester.testcase.RedisTestSortedSetCases">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="beforeClass" is-config="true" duration-ms="210" started-at="2020-08-31T15:29:25Z" finished-at="2020-08-31T15:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="Test_ZAdd(java.lang.String, java.util.Map, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZAdd" duration-ms="15" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|正常将元素插入到集合key中|&lt;/br&gt;Return:|返回插入后的元素数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zaddkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{two=2.0, three=3.0, one=1.0}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 3|实际结果: 3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZAdd -->
        <test-method status="PASS" signature="Test_ZAdd2(java.lang.String, double, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZAdd2" duration-ms="5" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|正常将元素插入到集合key中|&lt;/br&gt;Return:|返回插入后的元素数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zadd2key]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 1|实际结果: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZAdd2 -->
        <test-method status="PASS" signature="Test_ZCard(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZCard" duration-ms="7" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|key存在|key不存在|&lt;/br&gt;Return:|返回有序集合数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zaddkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 3|实际结果: 3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZCard -->
        <test-method status="PASS" signature="Test_ZCard(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZCard" duration-ms="13" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|key存在|key不存在|&lt;/br&gt;Return:|返回有序集合数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zadd_No]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 0|实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZCard -->
        <test-method status="PASS" signature="Test_ZCount(java.lang.String, double, double, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZCount" duration-ms="8" started-at="2020-08-31T15:29:25Z" description="Param:|String key, double min, double max|&lt;/br&gt;Case:|计算2000-5000薪水内的人数|&lt;/br&gt;Return:|返回min-max范围内的成员数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zcountkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2000.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 2|实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZCount -->
        <test-method status="PASS" signature="Test_ZCount(java.lang.String, double, double, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZCount" duration-ms="7" started-at="2020-08-31T15:29:25Z" description="Param:|String key, double min, double max|&lt;/br&gt;Case:|计算2000-5000薪水内的人数|&lt;/br&gt;Return:|返回min-max范围内的成员数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zcountkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3950.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 2|实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZCount -->
        <test-method status="PASS" signature="Test_ZCount2(java.lang.String, java.lang.String, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZCount2" duration-ms="19" started-at="2020-08-31T15:29:25Z" description="Param:|String key, String min, String max|&lt;/br&gt;Case:|正常将元素插入到集合key中|&lt;/br&gt;Return:|返回插入后的元素数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zcountkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2000.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 3|实际结果: 3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZCount2 -->
        <test-method status="PASS" signature="Test_ZIncrBy(java.lang.String, double, java.lang.String, java.lang.Double)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZIncrBy" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, double var2, String var4|&lt;/br&gt;Case:|为成员member增量2000| 为成员member -50&lt;/br&gt;Return:|返回增量后的新值|返回减量后的新值" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zincrbykey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2000.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 4000.0|实际结果: 4000.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZIncrBy -->
        <test-method status="PASS" signature="Test_ZRangeByScore(java.lang.String, double, double)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRangeByScore" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, double var2, double var4|&lt;/br&gt;Case:|指定区间值|&lt;/br&gt;Return:|返回有序的成员集合|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rangeByScoreKey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2000.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: [xiaoming, xiaohong]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRangeByScore -->
        <test-method status="PASS" signature="Test_ZRem(java.lang.String, java.lang.Long, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRem" duration-ms="19" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|移除一个成员|移除过个成员|&lt;/br&gt;Return:|返回被成功移除的元素数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZRemkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@1838ccb8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 1|实际结果: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRem -->
        <test-method status="PASS" signature="Test_ZRem(java.lang.String, java.lang.Long, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRem" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|移除一个成员|移除过个成员|&lt;/br&gt;Return:|返回被成功移除的元素数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZRemkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@6c2ed0cd]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 2|实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRem -->
        <test-method status="PASS" signature="Test_ZRemByRank(java.lang.String, long, long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRemByRank" duration-ms="8" started-at="2020-08-31T15:29:25Z" description="Param:|String key, long start, long end|&lt;/br&gt;Case:|移除下标范围内的成员|&lt;/br&gt;Return:|返回被移除的元素数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zremrangeByRankKey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRemByRank -->
        <test-method status="PASS" signature="Test_ZRemRangeByScore(java.lang.String, double, double)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRemRangeByScore" duration-ms="5" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|移除指定位置内的成员|&lt;/br&gt;Return:|返回被移除的成员数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zremRangeByScorekey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2000.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3500.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRemRangeByScore -->
        <test-method status="PASS" signature="Test_ZRevRange(java.lang.String, long, long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRevRange" duration-ms="9" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, long var2, long var4|&lt;/br&gt;Case:|倒序输出|&lt;/br&gt;Return:|返回成员的结果集|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zrevrangekey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: [tom, peter, jack]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRevRange -->
        <test-method status="PASS" signature="Test_ZRevRangeByScore(java.lang.String, double, double)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRevRangeByScore" duration-ms="5" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|倒序输出|&lt;/br&gt;Return:|返回成员的结果集|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zrevrangeByScorekey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2000.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: []]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRevRangeByScore -->
        <test-method status="PASS" signature="Test_ZRevRank(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZRevRank" duration-ms="8" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|对成员进行排名|&lt;/br&gt;Return:|返回某个成员的排名|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zrevrank]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tom]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRevRank -->
        <test-method status="PASS" signature="Test_ZScan(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZScan" duration-ms="7" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|匹配给定值|&lt;/br&gt;Return:|返回一个有序集合|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zscankey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: redis.clients.jedis.ScanResult@7e19ebf0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZScan -->
        <test-method status="PASS" signature="Test_ZScore(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="Test_ZScore" duration-ms="17" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|正常将元素插入到集合key中|&lt;/br&gt;Return:|返回插入后的元素数量|" data-provider="SortedSet_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zscorekey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tom]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 5000.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZScore -->
        <test-method name="Test_ZRange" signature="Test_ZRange(java.lang.String, long, long)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" status="PASS" duration-ms="8" finished-at="2020-08-31T15:29:25Z" started-at="2020-08-31T15:29:25Z" depends-on-methods="com.tester.testcase.RedisTestSortedSetCases.Test_ZAdd" data-provider="SortedSet_all" description="Param:|String var1, long var2, long var4|&lt;/br&gt;Case:|指定区间值|&lt;/br&gt;Return:|返回有序的成员集合|">
          <params>
            <param index="0">
              <value>
                <![CDATA[zaddkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: [one, two, three]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRange -->
        <test-method name="Test_ZRank" signature="Test_ZRank(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" status="PASS" duration-ms="7" finished-at="2020-08-31T15:29:25Z" started-at="2020-08-31T15:29:25Z" depends-on-methods="com.tester.testcase.RedisTestSortedSetCases.Test_ZAdd" data-provider="SortedSet_all" description="Param:|String var1, String var2|&lt;/br&gt;Case:|查看一个member的排名|&lt;/br&gt;Return:|返回score 的排名|">
          <params>
            <param index="0">
              <value>
                <![CDATA[zaddkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[two]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_ZRank -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:com.tester.testcase.RedisTestSortedSetCases@7ca48474]" name="aftersuite" is-config="true" duration-ms="68" started-at="2020-08-31T15:29:25Z" finished-at="2020-08-31T15:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- com.tester.testcase.RedisTestSortedSetCases -->
      <class name="com.tester.testcase.RedisTestSetCases">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="beforeClass" is-config="true" duration-ms="76" started-at="2020-08-31T15:29:25Z" finished-at="2020-08-31T15:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="Test_Sadd(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Sadd" duration-ms="7" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|正常将元素插入到集合key中|&lt;/br&gt;Return:|返回 1 或者0|" data-provider="Set_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@63611043]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 4]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Sadd -->
        <test-method status="PASS" signature="Test_Sadd(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Sadd" duration-ms="13" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|正常将元素插入到集合key中|&lt;/br&gt;Return:|返回 1 或者0|" data-provider="Set_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@20ca951f]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Sadd -->
        <test-method status="PASS" signature="Test_Scard(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Scard" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|key存在|key不存在|&lt;/br&gt;Return:|返回集合中元素的数量|key不存在时返回 0|" data-provider="Set_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 4]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Scard -->
        <test-method status="PASS" signature="Test_Scard(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Scard" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|key存在|key不存在|&lt;/br&gt;Return:|返回集合中元素的数量|key不存在时返回 0|" data-provider="Set_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[set_null]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Scard -->
        <test-method status="PASS" signature="Test_SisMember(java.lang.String, java.lang.String, java.lang.Boolean)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_SisMember" duration-ms="8" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|元素存在|元素不存在|&lt;/br&gt;Return:|存在返回true|不存在返回false|" data-provider="Set_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[setvalue]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: true;实际结果: true]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_SisMember -->
        <test-method status="PASS" signature="Test_SisMember(java.lang.String, java.lang.String, java.lang.Boolean)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_SisMember" duration-ms="8" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|元素存在|元素不存在|&lt;/br&gt;Return:|存在返回true|不存在返回false|" data-provider="Set_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[setnull]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: false;实际结果: false]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_SisMember -->
        <test-method status="PASS" signature="Test_Srem(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Srem" duration-ms="7" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|移除指定的元素|移除多个元素|&lt;/br&gt;Return:|返回被成功移除的元素的数量|" data-provider="Set_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[set_sremtest_key]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2d778add]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Srem -->
        <test-method status="PASS" signature="Test_Srem(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="Test_Srem" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|移除指定的元素|移除多个元素|&lt;/br&gt;Return:|返回被成功移除的元素的数量|" data-provider="Set_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[set_sremtest_key]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@73302995]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Srem -->
        <test-method name="Test_SrandMember" signature="Test_SrandMember(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" status="PASS" duration-ms="6" finished-at="2020-08-31T15:29:25Z" started-at="2020-08-31T15:29:25Z" depends-on-methods="com.tester.testcase.RedisTestSetCases.Test_Sadd" data-provider="Set_all" description="Param:|String var1, int var2|&lt;/br&gt;Case: |仅提供key参数|&lt;/br&gt;Return:|随机返回一个值|">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: setvalue2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_SrandMember -->
        <test-method name="Test_Sscan" signature="Test_Sscan(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" status="PASS" duration-ms="11" finished-at="2020-08-31T15:29:25Z" started-at="2020-08-31T15:29:25Z" depends-on-methods="com.tester.testcase.RedisTestSetCases.Test_Sadd" data-provider="Set_all" description="Param:|String var1, String var2|&lt;/br&gt;Case:|元素存在|元素不存在|&lt;/br&gt;Return:|存在返回true|不存在返回false|">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: redis.clients.jedis.ScanResult@44a59da3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Sscan -->
        <test-method name="Test_Spop" signature="Test_Spop(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" status="PASS" duration-ms="17" finished-at="2020-08-31T15:29:25Z" started-at="2020-08-31T15:29:25Z" depends-on-methods="com.tester.testcase.RedisTestSetCases.Test_Sadd, com.tester.testcase.RedisTestSetCases.Test_SrandMember" data-provider="Set_all" description="Param:|String|&lt;/br&gt;Case:|随机移除一个元素|&lt;/br&gt;Return:|返回被移除的多个元素|返回nil|">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: setvalue3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Spop -->
        <test-method name="Test_Spop2" signature="Test_Spop2(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" status="PASS" duration-ms="10" finished-at="2020-08-31T15:29:25Z" started-at="2020-08-31T15:29:25Z" depends-on-methods="com.tester.testcase.RedisTestSetCases.Test_Sadd, com.tester.testcase.RedisTestSetCases.Test_SrandMember" data-provider="Set_all" description="Param:|String var1, long var2|&lt;/br&gt;Case:|随机移除多个元素|集合不存在|&lt;/br&gt;Return:|返回被移除的多个元素|返回nil|">
          <params>
            <param index="0">
              <value>
                <![CDATA[setkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: [setvalue, setvalue4]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Spop2 -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:com.tester.testcase.RedisTestSetCases@69d9c55]" name="aftersuite" is-config="true" duration-ms="13" started-at="2020-08-31T15:29:25Z" finished-at="2020-08-31T15:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- com.tester.testcase.RedisTestSetCases -->
      <class name="com.tester.testcase.RedisTestListCases">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="beforeClass" is-config="true" duration-ms="233" started-at="2020-08-31T15:29:24Z" finished-at="2020-08-31T15:29:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="Test_BlPop(java.lang.Integer, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_BlPop" duration-ms="30" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|在指定时间内查找弹出的元素|&lt;/br&gt;Return:|在指定时间内查找弹出的元素|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[blpopkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: [9p:blpopkey, hello]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_BlPop -->
        <test-method status="PASS" signature="Test_BrPop(int, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_BrPop" duration-ms="9" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|弹出key尾部元素|&lt;/br&gt;Return:|在指定时间内查找弹出的元素|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[brpopkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: [9p:brpopkey, world]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_BrPop -->
        <test-method status="PASS" signature="Test_LIndex(java.lang.String, long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LIndex" duration-ms="11" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, long var2|&lt;/br&gt;Case:|下标为0|下标为-1|下标超出区间范围|&lt;/br&gt;Return:|返回下标索引处的值|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[listValue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: listValue|实际结果: listValue]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LIndex -->
        <test-method status="PASS" signature="Test_LIndex(java.lang.String, long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LIndex" duration-ms="14" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, long var2|&lt;/br&gt;Case:|下标为0|下标为-1|下标超出区间范围|&lt;/br&gt;Return:|返回下标索引处的值|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[listValue3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: listValue3|实际结果: listValue3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LIndex -->
        <test-method status="PASS" signature="Test_LIndex(java.lang.String, long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LIndex" duration-ms="23" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, long var2|&lt;/br&gt;Case:|下标为0|下标为-1|下标超出区间范围|&lt;/br&gt;Return:|返回下标索引处的值|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: null|实际结果: null]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LIndex -->
        <test-method status="PASS" signature="Test_LInsert(java.lang.String, redis.clients.jedis.ListPosition, java.lang.String, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LInsert" duration-ms="10" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, ListPosition var2, String var3, String var4|&lt;/br&gt;Case:|在X值之前插入|在X值之后插入|X值不存在时插入|&lt;/br&gt;Return:|插入成功后返回元素数量|插入失败返回0|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BEFORE]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[World]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[There]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 3|实际结果: 3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LInsert -->
        <test-method status="PASS" signature="Test_LInsert(java.lang.String, redis.clients.jedis.ListPosition, java.lang.String, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LInsert" duration-ms="40" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, ListPosition var2, String var3, String var4|&lt;/br&gt;Case:|在X值之前插入|在X值之后插入|X值不存在时插入|&lt;/br&gt;Return:|插入成功后返回元素数量|插入失败返回0|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AFTER]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Hi]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 4|实际结果: 4]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LInsert -->
        <test-method status="PASS" signature="Test_LInsert(java.lang.String, redis.clients.jedis.ListPosition, java.lang.String, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LInsert" duration-ms="8" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, ListPosition var2, String var3, String var4|&lt;/br&gt;Case:|在X值之前插入|在X值之后插入|X值不存在时插入|&lt;/br&gt;Return:|插入成功后返回元素数量|插入失败返回0|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AFTER]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Value_not_exist]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[python]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: -1|实际结果: -1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LInsert -->
        <test-method status="PASS" signature="Test_LInsert(java.lang.String, redis.clients.jedis.ListPosition, java.lang.String, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LInsert" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, ListPosition var2, String var3, String var4|&lt;/br&gt;Case:|在X值之前插入|在X值之后插入|X值不存在时插入|&lt;/br&gt;Return:|插入成功后返回元素数量|插入失败返回0|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey_no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BEFORE]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Value_not_exist]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[python]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 0|实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LInsert -->
        <test-method status="PASS" signature="Test_LPop(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPop" duration-ms="8" started-at="2020-08-31T15:29:24Z" description="Param:|String var1|&lt;/br&gt;Case:|移除一个key的头元素|key不存在|&lt;/br&gt;Return:|成功返回key的头元素|key不存在返回nil|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Strat]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: Strat|实际结果: Strat]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LPop -->
        <test-method status="PASS" signature="Test_LPop(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPop" duration-ms="4" started-at="2020-08-31T15:29:24Z" description="Param:|String var1|&lt;/br&gt;Case:|移除一个key的头元素|key不存在|&lt;/br&gt;Return:|成功返回key的头元素|key不存在返回nil|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey_no]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: null|实际结果: null]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LPop -->
        <test-method status="PASS" signature="Test_LPush(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPush" duration-ms="6" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|创建一个值|插入多个值|插入重复值|&lt;/br&gt;Return:|插入后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3af0a9da]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LPush -->
        <test-method status="PASS" signature="Test_LPush(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPush" duration-ms="27" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|创建一个值|插入多个值|插入重复值|&lt;/br&gt;Return:|插入后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@43b9fd5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LPush -->
        <test-method status="PASS" signature="Test_LPush(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPush" duration-ms="18" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|创建一个值|插入多个值|插入重复值|&lt;/br&gt;Return:|插入后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@79dc5318]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 4]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LPush -->
        <test-method status="PASS" signature="Test_LPushx(java.lang.String, java.lang.Long, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPushx" duration-ms="7" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|空列表插入值|非空列表插入值|&lt;/br&gt;Return:|插入成功后返回元素数量|插入失败返回0|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lpushkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@8e50104]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 2|实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LPushx -->
        <test-method status="PASS" signature="Test_LPushx(java.lang.String, java.lang.Long, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LPushx" duration-ms="6" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|空列表插入值|非空列表插入值|&lt;/br&gt;Return:|插入成功后返回元素数量|插入失败返回0|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey_no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@37e4d7bb]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 0|实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LPushx -->
        <test-method status="PASS" signature="Test_LRem(java.lang.String, java.lang.Long, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LRem" duration-ms="9" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, long var2, String var4|&lt;/br&gt;Case:|从表头移除count数量的值|从表尾移除count数量的值|count=0移除所有value的值|&lt;/br&gt;Return:|返回被移除元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lremkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[morning]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 2|实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LRem -->
        <test-method status="PASS" signature="Test_LRem(java.lang.String, java.lang.Long, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LRem" duration-ms="14" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, long var2, String var4|&lt;/br&gt;Case:|从表头移除count数量的值|从表尾移除count数量的值|count=0移除所有value的值|&lt;/br&gt;Return:|返回被移除元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lremkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[morning]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 1|实际结果: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LRem -->
        <test-method status="PASS" signature="Test_LRem(java.lang.String, java.lang.Long, java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LRem" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, long var2, String var4|&lt;/br&gt;Case:|从表头移除count数量的值|从表尾移除count数量的值|count=0移除所有value的值|&lt;/br&gt;Return:|返回被移除元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lremkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 2|实际结果: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LRem -->
        <test-method status="PASS" signature="Test_LSet(java.lang.String, java.lang.Long, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LSet" duration-ms="6" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, long var2, String var4|&lt;/br&gt;Case:|创建一个值|插入多个值|插入重复值|&lt;/br&gt;Return:|插入后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lsetkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[play game]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OK]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: OK|实际结果: OK]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LSet -->
        <test-method status="PASS" signature="Test_LTrim(java.lang.String, long, long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_LTrim" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, long var2, long var4|&lt;/br&gt;Case:|移除start和end范围之外的元素|&lt;/br&gt;Return:|成功返回OK|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ltrimkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OK]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: OK|实际结果: OK]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LTrim -->
        <test-method status="PASS" signature="Test_RPop(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPop" duration-ms="22" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|弹出末尾元素|key不存在|&lt;/br&gt;Return:|key存在返回被弹出的元素|key不存在返回nil" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lpopkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bar]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: bar|实际结果: bar]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_RPop -->
        <test-method status="PASS" signature="Test_RPop(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPop" duration-ms="23" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|弹出末尾元素|key不存在|&lt;/br&gt;Return:|key存在返回被弹出的元素|key不存在返回nil" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lpopkey_no]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: null|实际结果: null]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_RPop -->
        <test-method status="PASS" signature="Test_RPush(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPush" duration-ms="6" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|插入一个值|插入多个值|插入重复值|&lt;/br&gt;Return:|插入后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f7923a5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 86]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_RPush -->
        <test-method status="PASS" signature="Test_RPush(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPush" duration-ms="10" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|插入一个值|插入多个值|插入重复值|&lt;/br&gt;Return:|插入后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f7923a5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 87]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_RPush -->
        <test-method status="PASS" signature="Test_RPush(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPush" duration-ms="9" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|插入一个值|插入多个值|插入重复值|&lt;/br&gt;Return:|插入后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@74a6f9c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 89]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_RPush -->
        <test-method status="PASS" signature="Test_RPushx(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPushx" duration-ms="6" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|对存在的key插入值|对不存在的key插入值|&lt;/br&gt;Return:|插入成功后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@54eb2b70]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 90]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_RPushx -->
        <test-method status="PASS" signature="Test_RPushx(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="Test_RPushx" duration-ms="8" started-at="2020-08-31T15:29:24Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|对存在的key插入值|对不存在的key插入值|&lt;/br&gt;Return:|插入成功后返回元素数量|" data-provider="List_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey_no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@45a37759]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[|实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_RPushx -->
        <test-method name="Test_LLen" signature="Test_LLen(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" status="PASS" duration-ms="9" finished-at="2020-08-31T15:29:24Z" started-at="2020-08-31T15:29:24Z" depends-on-methods="com.tester.testcase.RedisTestListCases.Test_LPush" data-provider="List_all" description="Param:|String var1|&lt;/br&gt;Case:|列表非空|列表为空|&lt;/br&gt;Return:|列表为空返回0|返回列表元素数量|">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 4|实际结果: 4]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LLen -->
        <test-method name="Test_LLen" signature="Test_LLen(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" status="PASS" duration-ms="27" finished-at="2020-08-31T15:29:24Z" started-at="2020-08-31T15:29:24Z" depends-on-methods="com.tester.testcase.RedisTestListCases.Test_LPush" data-provider="List_all" description="Param:|String var1|&lt;/br&gt;Case:|列表非空|列表为空|&lt;/br&gt;Return:|列表为空返回0|返回列表元素数量|">
          <params>
            <param index="0">
              <value>
                <![CDATA[listnull]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 0|实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LLen -->
        <test-method name="Test_LRange" signature="Test_LRange(java.lang.String, long, long)[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" status="PASS" duration-ms="10" finished-at="2020-08-31T15:29:24Z" started-at="2020-08-31T15:29:24Z" depends-on-methods="com.tester.testcase.RedisTestListCases.Test_LPush" data-provider="List_all" description="Param:|String var1, long var2, long var4|&lt;/br&gt;Case:|start起始位置，end结束位置|&lt;/br&gt;Return:|返回给定位置的元素|">
          <params>
            <param index="0">
              <value>
                <![CDATA[listkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: [go, java, python]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_LRange -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:com.tester.testcase.RedisTestListCases@153f5a29]" name="aftersuite" is-config="true" duration-ms="112" started-at="2020-08-31T15:29:24Z" finished-at="2020-08-31T15:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- com.tester.testcase.RedisTestListCases -->
      <class name="com.tester.testcase.RedisTestHashCases">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="beforeClass" is-config="true" duration-ms="73" started-at="2020-08-31T15:29:25Z" finished-at="2020-08-31T15:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="Test_Hexists(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hexists" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|字段存在|key不存在|字段不存在|&lt;/br&gt;Return:|存在返回true|key不存在返回false|字段不存在返回false|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hexistskey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hexistsname]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[key：hexistskey|字段：hexistsname存在|实际结果: true]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hexists -->
        <test-method status="PASS" signature="Test_Hexists(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hexists" duration-ms="5" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|字段存在|key不存在|字段不存在|&lt;/br&gt;Return:|存在返回true|key不存在返回false|字段不存在返回false|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hash_key_not_exist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[hash_key_not_existorhashname2不存在||实际结果: false]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hexists -->
        <test-method status="PASS" signature="Test_Hexists(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hexists" duration-ms="4" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2|&lt;/br&gt;Case:|字段存在|key不存在|字段不存在|&lt;/br&gt;Return:|存在返回true|key不存在返回false|字段不存在返回false|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hexistskey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hash_not_exist]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[hexistskeyorhash_not_exist不存在||实际结果: false]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hexists -->
        <test-method status="PASS" signature="Test_HgetAll(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HgetAll" duration-ms="8" started-at="2020-08-31T15:29:25Z" description="Param:|String var1|&lt;/br&gt;Case:|key存在|key不存在|&lt;/br&gt;Return:|存在返回所有字段及字段值|不存在返回空列表|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hexistskey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: {hexistsname=hexistsValue}]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_HgetAll -->
        <test-method status="PASS" signature="Test_HgetAll(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HgetAll" duration-ms="4" started-at="2020-08-31T15:29:25Z" description="Param:|String var1|&lt;/br&gt;Case:|key存在|key不存在|&lt;/br&gt;Return:|存在返回所有字段及字段值|不存在返回空列表|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hash_key_not_exist]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: {}]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_HgetAll -->
        <test-method status="PASS" signature="Test_HincrBy(java.lang.String, java.lang.String, java.lang.Long, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HincrBy" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|increment为正数200|increment为负数50|&lt;/br&gt;Return:|创建相加后的值|返回减去50后的值|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashincrekey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashincrename]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 200 |实际结果: 200]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_HincrBy -->
        <test-method status="PASS" signature="Test_HincrBy(java.lang.String, java.lang.String, java.lang.Long, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HincrBy" duration-ms="24" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|increment为正数200|increment为负数50|&lt;/br&gt;Return:|创建相加后的值|返回减去50后的值|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashincrekey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashincrename]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 150 |实际结果: 150]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_HincrBy -->
        <test-method status="PASS" signature="Test_HincrByFloat(java.lang.String, java.lang.String, java.lang.Double, java.lang.Double)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HincrByFloat" duration-ms="8" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|传入小数|传入指数符号|key不存在|key存在字段不存在|&lt;/br&gt;Return:|返回相加后的值|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 200.0 |实际结果: 200.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_HincrByFloat -->
        <test-method status="PASS" signature="Test_HincrByFloat(java.lang.String, java.lang.String, java.lang.Double, java.lang.Double)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_HincrByFloat" duration-ms="9" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|传入小数|传入指数符号|key不存在|key存在字段不存在|&lt;/br&gt;Return:|返回相加后的值|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname33]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 10.5 |实际结果: 10.5]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_HincrByFloat -->
        <test-method status="PASS" signature="Test_Hkeys(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hkeys" duration-ms="9" started-at="2020-08-31T15:29:25Z" description="Param:|String var1|&lt;/br&gt;Case:|key存在|key不存在&lt;/br&gt;Return:|返回所有字段|返回nil|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: []]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hkeys -->
        <test-method status="PASS" signature="Test_Hkeys(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hkeys" duration-ms="4" started-at="2020-08-31T15:29:25Z" description="Param:|String var1|&lt;/br&gt;Case:|key存在|key不存在&lt;/br&gt;Return:|返回所有字段|返回nil|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hash_key_not_exist]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: []]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hkeys -->
        <test-method status="PASS" signature="Test_Hmget(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hmget" duration-ms="8" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|在key中给定一个存在的字段|在key给定一个不存在的字段|&lt;/br&gt;Return:|创建返回key中的一个字段值|字段不存在返回nil|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hmgetkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@14bee915]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: [www.google.com]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hmget -->
        <test-method status="PASS" signature="Test_Hmget(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hmget" duration-ms="4" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|在key中给定一个存在的字段|在key给定一个不存在的字段|&lt;/br&gt;Return:|创建返回key中的一个字段值|字段不存在返回nil|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hmgetkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1115ec15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: [www.yahoo.com, www.google.com]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hmget -->
        <test-method status="PASS" signature="Test_Hmget(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hmget" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|在key中给定一个存在的字段|在key给定一个不存在的字段|&lt;/br&gt;Return:|创建返回key中的一个字段值|字段不存在返回nil|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hmgetkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@82ea68c]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: [null]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hmget -->
        <test-method status="PASS" signature="Test_Hmset(java.lang.String, java.util.Map, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hmset" duration-ms="9" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|插入多个字段|重复插入字段&lt;/br&gt;Return:|创建返回 OK| 返回OK将替换旧值|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hmsetkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{yahoo=www.yahoo.com, google=www.google.com}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OK]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: OK|实际结果: OK]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hmset -->
        <test-method status="PASS" signature="Test_Hmset(java.lang.String, java.util.Map, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hmset" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|插入多个字段|重复插入字段&lt;/br&gt;Return:|创建返回 OK| 返回OK将替换旧值|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hmsetkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{yahoo=www.yahoo.com, google=doc.redisfans.com}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OK]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: OK|实际结果: OK]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hmset -->
        <test-method status="PASS" signature="Test_Hset(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hset" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, String var3|&lt;/br&gt;Case:|创建一个哈希表|覆盖哈希表中的旧值&lt;/br&gt;Return:|创建返回 1 覆盖返回0|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hashValue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hset -->
        <test-method status="PASS" signature="Test_Hset(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hset" duration-ms="5" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, String var3|&lt;/br&gt;Case:|创建一个哈希表|覆盖哈希表中的旧值&lt;/br&gt;Return:|创建返回 1 覆盖返回0|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hashValue2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hset -->
        <test-method status="PASS" signature="Test_Hset(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hset" duration-ms="25" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, String var3|&lt;/br&gt;Case:|创建一个哈希表|覆盖哈希表中的旧值&lt;/br&gt;Return:|创建返回 1 覆盖返回0|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hashValue3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hset -->
        <test-method status="PASS" signature="Test_Hset(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hset" duration-ms="6" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, String var3|&lt;/br&gt;Case:|创建一个哈希表|覆盖哈希表中的旧值&lt;/br&gt;Return:|创建返回 1 覆盖返回0|" data-provider="Hash_all" finished-at="2020-08-31T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hashNewValue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hset -->
        <test-method status="PASS" signature="Test_Hset2(java.lang.String, java.lang.String, [B)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hset2" duration-ms="16" started-at="2020-08-31T15:29:25Z" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|创建一个哈希表|覆盖哈希表中的旧值&lt;/br&gt;Return:|创建返回 1 覆盖返回0|" data-provider="Hash_all" finished-at="2020-08-31T15:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@59e505b2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hset2 -->
        <test-method status="PASS" signature="Test_Hset2(java.lang.String, java.lang.String, [B)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hset2" duration-ms="12" started-at="2020-08-31T15:29:26Z" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|创建一个哈希表|覆盖哈希表中的旧值&lt;/br&gt;Return:|创建返回 1 覆盖返回0|" data-provider="Hash_all" finished-at="2020-08-31T15:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[B@59e505b2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hset2 -->
        <test-method status="PASS" signature="Test_Hvals(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hvals" duration-ms="6" started-at="2020-08-31T15:29:26Z" description="Param:|String var1|&lt;/br&gt;Case:|key存在|key不存在&lt;/br&gt;Return:|返回所有数据|返回nil|" data-provider="Hash_all" finished-at="2020-08-31T15:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hmsetkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: [www.yahoo.com, doc.redisfans.com, www.baidu.com]]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hvals -->
        <test-method status="PASS" signature="Test_Hvals(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="Test_Hvals" duration-ms="5" started-at="2020-08-31T15:29:26Z" description="Param:|String var1|&lt;/br&gt;Case:|key存在|key不存在&lt;/br&gt;Return:|返回所有数据|返回nil|" data-provider="Hash_all" finished-at="2020-08-31T15:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[absencekey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: []]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hvals -->
        <test-method name="Test_Hget" signature="Test_Hget(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="5" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset" data-provider="Hash_all" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|获取指定字段的值|指定字段不存在|key不存在|&lt;/br&gt;Return:|存在返回字段值|不存在返回nil|返回nil|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hashname3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hashValue3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: hashValue3|实际结果: hashValue3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hget -->
        <test-method name="Test_Hget" signature="Test_Hget(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="10" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset" data-provider="Hash_all" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|获取指定字段的值|指定字段不存在|key不存在|&lt;/br&gt;Return:|存在返回字段值|不存在返回nil|返回nil|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hash_key_not_exist]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: null|实际结果: null]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hget -->
        <test-method name="Test_Hget" signature="Test_Hget(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="7" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset" data-provider="Hash_all" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|获取指定字段的值|指定字段不存在|key不存在|&lt;/br&gt;Return:|存在返回字段值|不存在返回nil|返回nil|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hash_not_exist]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: null|实际结果: null]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hget -->
        <test-method name="Test_Hlen" signature="Test_Hlen(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="8" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset" data-provider="Hash_all" description="Param:|String var1|&lt;/br&gt;Case:|正确返回字段的数量|key不存在&lt;/br&gt;Return:|返回哈希表key中字段的数量|返回0|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 3|实际结果: 3]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hlen -->
        <test-method name="Test_Hlen" signature="Test_Hlen(java.lang.String, java.lang.Long)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="33" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset" data-provider="Hash_all" description="Param:|String var1|&lt;/br&gt;Case:|正确返回字段的数量|key不存在&lt;/br&gt;Return:|返回哈希表key中字段的数量|返回0|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey_absence]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: 0|实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hlen -->
        <test-method name="Test_Hscan" signature="Test_Hscan(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="19" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset" data-provider="Hash_all" description="Param:|String var1, String var2, byte[] var3|&lt;/br&gt;Case:|获取所有元素数量|&lt;/br&gt;Return:|返回所有元素|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: redis.clients.jedis.ScanResult@59cba5a]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hscan -->
        <test-method name="Test_Hdel" signature="Test_Hdel(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="11" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset, com.tester.testcase.RedisTestHashCases.Test_Hexists, com.tester.testcase.RedisTestHashCases.Test_Hget" data-provider="Hash_all" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|删除一个字段|删除2个字段|删除不存在的字段|&lt;/br&gt;Return:|返回1|返回2|返回0|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3f67593e]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[删除一个字段成功: 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hdel -->
        <test-method name="Test_Hdel" signature="Test_Hdel(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="8" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset, com.tester.testcase.RedisTestHashCases.Test_Hexists, com.tester.testcase.RedisTestHashCases.Test_Hget" data-provider="Hash_all" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|删除一个字段|删除2个字段|删除不存在的字段|&lt;/br&gt;Return:|返回1|返回2|返回0|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1ab06251]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[删除两个字段成功: 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hdel -->
        <test-method name="Test_Hdel" signature="Test_Hdel(java.lang.String, [Ljava.lang.String;)[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" status="PASS" duration-ms="5" finished-at="2020-08-31T15:29:26Z" started-at="2020-08-31T15:29:26Z" depends-on-methods="com.tester.testcase.RedisTestHashCases.Test_Hset, com.tester.testcase.RedisTestHashCases.Test_Hexists, com.tester.testcase.RedisTestHashCases.Test_Hget" data-provider="Hash_all" description="Param:|String var1, String... var2|&lt;/br&gt;Case:|删除一个字段|删除2个字段|删除不存在的字段|&lt;/br&gt;Return:|返回1|返回2|返回0|">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@41ab013]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[删除不存在的字段：0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Hdel -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:com.tester.testcase.RedisTestHashCases@59e84876]" name="aftersuite" is-config="true" duration-ms="62" started-at="2020-08-31T15:29:26Z" finished-at="2020-08-31T15:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- com.tester.testcase.RedisTestHashCases -->
      <class name="com.tester.testcase.RedisTestStringCases">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="beforeClass" is-config="true" duration-ms="1665" started-at="2020-08-31T15:29:22Z" finished-at="2020-08-31T15:29:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="Test_BitCount(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_BitCount" duration-ms="37" started-at="2020-08-31T15:29:24Z" description="Param:String var1;Case:计算被设置为 1 的比特位的数量;Return: 被设置为 1 的位的数量" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testdecr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[统计的key值：testdecr;value值：7]]>
            </line>
            <line>
              <![CDATA[实际结果: 7]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_BitCount -->
        <test-method status="PASS" signature="Test_BitCount(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_BitCount" duration-ms="7" started-at="2020-08-31T15:29:24Z" description="Param:String var1;Case:计算被设置为 1 的比特位的数量;Return: 被设置为 1 的位的数量" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test_decr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[统计的key值：test_decr;value值：12]]>
            </line>
            <line>
              <![CDATA[实际结果: 12]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_BitCount -->
        <test-method status="PASS" signature="Test_BitCount2(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_BitCount2" duration-ms="4" started-at="2020-08-31T15:29:24Z" description="Param:String var1 long var2, long var4;Case:计算被设置为 1 的比特位的数量;Return: 被设置为 1 的位的数量" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testdecr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[统计的key值：testdecr;value值：7]]>
            </line>
            <line>
              <![CDATA[实际结果: 7]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_BitCount2 -->
        <test-method status="PASS" signature="Test_BitCount2(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_BitCount2" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="Param:String var1 long var2, long var4;Case:计算被设置为 1 的比特位的数量;Return: 被设置为 1 的位的数量" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test_decr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[统计的key值：test_decr;value值：12]]>
            </line>
            <line>
              <![CDATA[实际结果: 12]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_BitCount2 -->
        <test-method status="PASS" signature="Test_Decr(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Decr" duration-ms="4" started-at="2020-08-31T15:29:24Z" description="Param:String var1;Case:对存在的key且为数字值 or 不存在的key or key的值不为数字 进行 DECR;Return: 存在的key:key本身-1|不存在的key-1|key不为数字: 抛异常" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testdecr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[统计的key值：testdecr;value值：30]]>
            </line>
            <line>
              <![CDATA[实际结果: 30]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Decr -->
        <test-method status="PASS" signature="Test_Decr(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Decr" duration-ms="4" started-at="2020-08-31T15:29:24Z" description="Param:String var1;Case:对存在的key且为数字值 or 不存在的key or key的值不为数字 进行 DECR;Return: 存在的key:key本身-1|不存在的key-1|key不为数字: 抛异常" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test_decr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[统计的key值：test_decr;value值：-70]]>
            </line>
            <line>
              <![CDATA[实际结果: -70]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Decr -->
        <test-method status="PASS" signature="Test_DecrBy(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_DecrBy" duration-ms="6" started-at="2020-08-31T15:29:24Z" description="Param:String var1 long var2;Case:对存在的key且为数字值 or 不存在的key or key的值不为数字 进行 DECR;Return: 存在的key:key本身-1|不存在的key-1|key不为数字: 抛异常" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testdecr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[统计的key值：testdecr;value值：28]]>
            </line>
            <line>
              <![CDATA[实际结果: 28]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_DecrBy -->
        <test-method status="PASS" signature="Test_DecrBy(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_DecrBy" duration-ms="4" started-at="2020-08-31T15:29:24Z" description="Param:String var1 long var2;Case:对存在的key且为数字值 or 不存在的key or key的值不为数字 进行 DECR;Return: 存在的key:key本身-1|不存在的key-1|key不为数字: 抛异常" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test_decr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[统计的key值：test_decr;value值：-72]]>
            </line>
            <line>
              <![CDATA[实际结果: -72]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_DecrBy -->
        <test-method status="PASS" signature="Test_Incr(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Incr" duration-ms="9" started-at="2020-08-31T15:29:24Z" description="String var1;Case:key中储存的数字值增一;Return: 返回+1后的值" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testdecr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 29]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Incr -->
        <test-method status="PASS" signature="Test_Incr(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Incr" duration-ms="16" started-at="2020-08-31T15:29:24Z" description="String var1;Case:key中储存的数字值增一;Return: 返回+1后的值" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test_decr]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: -71]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Incr -->
        <test-method status="PASS" signature="Test_IncrBy(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_IncrBy" duration-ms="18" started-at="2020-08-31T15:29:24Z" description="String var1, long var2;Case:将 key 所储存的值+2;Return: 返回相加后的值" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringcount]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 22]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_IncrBy -->
        <test-method status="PASS" signature="Test_IncrBy(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_IncrBy" duration-ms="19" started-at="2020-08-31T15:29:24Z" description="String var1, long var2;Case:将 key 所储存的值+2;Return: 返回相加后的值" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringnumber]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 44]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_IncrBy -->
        <test-method status="PASS" signature="Test_IncrByFloat(java.lang.String, double)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_IncrByFloat" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="String var1, double var2;Case:将 key 所储存的值+1.1;Return: 返回给定 key 的旧值" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringcount]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 21.1]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_IncrByFloat -->
        <test-method status="PASS" signature="Test_Psetex(java.lang.String, java.lang.Long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Psetex" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="String var1, long var2, String var4;Case:设置key值1000ms;Return: 返回OK" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: OK]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Psetex -->
        <test-method status="PASS" signature="Test_Set(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Set" duration-ms="10" started-at="2020-08-31T15:29:24Z" description="Param:String var1, String var2;Case:指定key中插入value;Return:返回 OK" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[stringvalue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[插入的key值：stringkey;value值：stringvalue]]>
            </line>
            <line>
              <![CDATA[预期结果: OK | 实际结果: OK]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Set -->
        <test-method status="PASS" signature="Test_Setbit(java.lang.String, java.lang.Long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Setbit" duration-ms="6" started-at="2020-08-31T15:29:24Z" description="String var1, long var2, String var4;Case:偏移量上的位为1;Return: 返回指定偏移量原来储存的位" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringsetbit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[294913]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: true]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Setbit -->
        <test-method status="PASS" signature="Test_Setex(java.lang.String, java.lang.Integer, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Setex" duration-ms="6" started-at="2020-08-31T15:29:24Z" description="String var1, int var2, String var3;Case:设置生存时间为60s;Return: OK" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringcache_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10086]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: OK]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Setex -->
        <test-method status="PASS" signature="Test_Setnx(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Setnx" duration-ms="9" started-at="2020-08-31T15:29:24Z" description="String var1, String var2;Case:key不存在时值插入成功|key存在时值不会被覆盖;Return: 成功返回 1 失败返回 0 " data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[stringvalue4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Setnx -->
        <test-method status="PASS" signature="Test_Setnx(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Setnx" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="String var1, String var2;Case:key不存在时值插入成功|key存在时值不会被覆盖;Return: 成功返回 1 失败返回 0 " data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[stringvalue4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Setnx -->
        <test-method status="PASS" signature="Test_StrLen(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_StrLen" duration-ms="24" started-at="2020-08-31T15:29:24Z" description="String var1;Case:正确返回字符串长度|key不存在返回0;Return: 返回字符串长度" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 11]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_StrLen -->
        <test-method status="PASS" signature="Test_StrLen(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_StrLen" duration-ms="23" started-at="2020-08-31T15:29:24Z" description="String var1;Case:正确返回字符串长度|key不存在返回0;Return: 返回字符串长度" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringstrlen]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_StrLen -->
        <test-method status="PASS" signature="Test_Append(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_Append" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="Param:String var1, String var2;Case:key已存在追加到末尾;Return: key 中字符串的长度" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[stringvalue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[插入的key值：stringkey;value值：22]]>
            </line>
            <line>
              <![CDATA[实际结果: 22]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Append -->
        <test-method status="PASS" signature="Test_GetSet(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_GetSet" duration-ms="5" started-at="2020-08-31T15:29:24Z" description="String var1, String var2;Case:设置value值返回旧的值;Return: 返回给定 key 的旧值" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatevalue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: updatevalue]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_GetSet -->
        <test-method status="PASS" signature="Test_SetRange(java.lang.String, java.lang.Long, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="Test_SetRange" duration-ms="11" started-at="2020-08-31T15:29:24Z" description="String var1, long var2, String var4;Case:根据给定的偏移量覆盖key存储的value值;Return: 返回字符串的长度" data-provider="String_all" finished-at="2020-08-31T15:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringSetRange]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Redis]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: 11]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_SetRange -->
        <test-method name="Test_Get" signature="Test_Get(java.lang.String, java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" status="PASS" duration-ms="5" finished-at="2020-08-31T15:29:24Z" started-at="2020-08-31T15:29:24Z" depends-on-methods="com.tester.testcase.RedisTestStringCases.Test_Set" data-provider="String_all" description="Param:String var1;Case:正常获取到key值;Return: 当 key 不存在时，返回nil,否则，返回 key 的值: 抛异常">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[stringvalue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: stringvaluestringvalue]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_Get -->
        <test-method name="Test_GetBit" signature="Test_GetBit(java.lang.String, java.lang.Boolean)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" status="PASS" duration-ms="7" finished-at="2020-08-31T15:29:24Z" started-at="2020-08-31T15:29:24Z" depends-on-methods="com.tester.testcase.RedisTestStringCases.Test_Set" data-provider="String_all" description="Param:String var1;Case:获取的key值存在 or 不存在;Return: 存在返回1|不存在返回0">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: true | 实际结果: true]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_GetBit -->
        <test-method name="Test_GetBit" signature="Test_GetBit(java.lang.String, java.lang.Boolean)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" status="PASS" duration-ms="4" finished-at="2020-08-31T15:29:24Z" started-at="2020-08-31T15:29:24Z" depends-on-methods="com.tester.testcase.RedisTestStringCases.Test_Set" data-provider="String_all" description="Param:String var1;Case:获取的key值存在 or 不存在;Return: 存在返回1|不存在返回0">
          <params>
            <param index="0">
              <value>
                <![CDATA[test_decr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[预期结果: false | 实际结果: false]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_GetBit -->
        <test-method name="Test_GetRange" signature="Test_GetRange(java.lang.String)[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" status="PASS" duration-ms="6" finished-at="2020-08-31T15:29:24Z" started-at="2020-08-31T15:29:24Z" depends-on-methods="com.tester.testcase.RedisTestStringCases.Test_Set" data-provider="String_all" description="String var1, long var2, long var4;Case:正常传入start:0,end:2;Return: 截取得出的子字符串">
          <params>
            <param index="0">
              <value>
                <![CDATA[stringkey]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[实际结果: str]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test_GetRange -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:com.tester.testcase.RedisTestStringCases@26f67b76]" name="aftersuite" is-config="true" duration-ms="0" started-at="2020-08-31T15:29:24Z" finished-at="2020-08-31T15:29:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- com.tester.testcase.RedisTestStringCases -->
    </test> <!-- redis的全部测试模块 -->
  </suite> <!-- redis的接口测试套件 -->
</testng-results>
